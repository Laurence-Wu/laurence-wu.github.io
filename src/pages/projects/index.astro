---
import Layout from '../../components/Layout.astro';
import { getCollection } from 'astro:content';

const allProjects = await getCollection('projects');
const sortedProjects = allProjects.sort((a, b) => 
  b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// Since we removed 'featured' field, just show all projects
const featuredProjects = sortedProjects.slice(0, 1); // Show first project as featured
const otherProjects = sortedProjects.slice(1); // Rest as other projects

// Helper function to get proper URL with base path
const baseUrl = import.meta.env.BASE_URL;
function getUrl(path: string): string {
  const cleanBaseUrl = baseUrl.endsWith('/') ? baseUrl.slice(0, -1) : baseUrl;
  const cleanPath = path.startsWith('/') ? path : `/${path}`;
  return `${cleanBaseUrl}${cleanPath}`;
}
---

<Layout title="Projects - Laurence" description="Explore my engineering and software development projects.">
  <div class="projects-header">
    <div class="container">
      <h1>Projects</h1>
      <p>Engineering and software development work</p>
    </div>
  </div>

  <section class="projects-content">
    <div class="container">
      {featuredProjects.length > 0 && (
        <div class="featured-section">
          <h2>Featured Projects</h2>
          <div class="projects-grid featured">
            {featuredProjects.map(project => (
              <article class="project-card featured-card">
                <header class="project-header">
                  <h3>
                    <a href={getUrl(`/projects/${project.slug}/`)}>{project.data.title}</a>
                  </h3>
                  <div class="project-meta">
                    <time datetime={project.data.pubDate.toISOString()}>
                      {project.data.pubDate.toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'short'
                      })}
                    </time>
                  </div>
                </header>
                
                <p class="project-description">{project.data.description}</p>
                
                <div class="project-technologies">
                  {project.data.tags && project.data.tags.slice(0, 4).map((tag: string) => (
                    <span class="tech-tag">{tag}</span>
                  ))}
                  {project.data.tags && project.data.tags.length > 4 && (
                    <span class="tech-tag">+{project.data.tags.length - 4}</span>
                  )}
                </div>
                
                <div class="project-links">
                  <a href={getUrl(`/projects/${project.slug}/`)} class="project-link">
                    <span>Details</span>
                  </a>
                </div>
              </article>
            ))}
          </div>
        </div>
      )}

      {otherProjects.length > 0 && (
        <div class="other-projects-section">
          <h2>Other Projects</h2>
          <div class="projects-grid">
            {otherProjects.map(project => (
              <article class="project-card">
                <header class="project-header">
                  <h3>
                    <a href={getUrl(`/projects/${project.slug}/`)}>{project.data.title}</a>
                  </h3>
                  <div class="project-meta">
                    <time datetime={project.data.pubDate.toISOString()}>
                      {project.data.pubDate.toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'short'
                      })}
                    </time>
                  </div>
                </header>
                
                <p class="project-description">{project.data.description}</p>
                
                <div class="project-technologies">
                  {project.data.tags && project.data.tags.slice(0, 3).map((tag: string) => (
                    <span class="tech-tag">{tag}</span>
                  ))}
                  {project.data.tags && project.data.tags.length > 3 && (
                    <span class="tech-tag">+{project.data.tags.length - 3}</span>
                  )}
                </div>
                
                <div class="project-links">
                  <a href={getUrl(`/projects/${project.slug}/`)} class="project-link">
                    Details
                  </a>
                </div>
              </article>
            ))}
          </div>
        </div>
      )}
    </div>
  </section>
</Layout>

<style>
  .projects-header {
    background: linear-gradient(135deg, #8A9A7E 0%, #39647c 50%, #2E3A59 100%);
    color: white;
    padding: 5rem 0 4rem;
    text-align: center;
    position: relative;
    overflow: hidden;
  }
  
  .projects-header::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: 
      radial-gradient(circle at 20% 30%, rgba(255, 255, 255, 0.1) 0%, transparent 50%),
      radial-gradient(circle at 80% 70%, rgba(212, 175, 55, 0.15) 0%, transparent 50%);
    animation: float 20s ease-in-out infinite;
  }
  
  @keyframes float {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    50% { transform: translateY(-20px) rotate(1deg); }
  }
  
  .projects-header h1 {
    font-size: 3.5rem;
    margin-bottom: 1rem;
    font-weight: 700;
    position: relative;
    z-index: 2;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
  }
  
  .projects-header p {
    font-size: 1.6rem;
    font-weight: 500;
    opacity: 0.95;
    margin: 0;
    color: #F4E8D1;
    position: relative;
    z-index: 2;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
  }
  
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }
  
  .projects-content {
    padding: 5rem 0;
    background: linear-gradient(
      to bottom,
      rgba(244, 232, 209, 0.3) 0%,
      rgba(244, 232, 209, 0.1) 50%,
      rgba(244, 232, 209, 0.3) 100%
    );
  }
  
  .featured-section {
    margin-bottom: 5rem;
  }
  
  .featured-section h2,
  .other-projects-section h2 {
    font-size: 2.5rem;
    margin-bottom: 3rem;
    color: #2E3A59;
    text-align: center;
    position: relative;
    font-weight: 600;
  }
  
  .featured-section h2::after,
  .other-projects-section h2::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 3px;
    background: linear-gradient(90deg, #8A9A7E, #D4AF37);
    border-radius: 2px;
  }
  
  .projects-grid {
    display: grid;
    gap: 2.5rem;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
  }
  
  .projects-grid.featured {
    grid-template-columns: 1fr;
    max-width: 900px;
    margin: 0 auto;
  }
  
  .project-card {
    background: rgba(255, 255, 255, 0.95);
    border-radius: 20px;
    padding: 2.5rem;
    box-shadow: 
      0 10px 30px rgba(0, 0, 0, 0.1),
      0 1px 8px rgba(0, 0, 0, 0.1);
    transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    border: 1px solid rgba(138, 154, 126, 0.2);
    position: relative;
    overflow: hidden;
  }
  
  .project-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, #8A9A7E, #D4AF37, #8A9A7E);
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .project-card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 
      0 20px 40px rgba(0, 0, 0, 0.15),
      0 8px 16px rgba(0, 0, 0, 0.1);
  }
  
  .project-card:hover::before {
    opacity: 1;
  }
  
  .featured-card {
    background: linear-gradient(135deg, 
      rgba(255, 253, 250, 0.98) 0%, 
      rgba(250, 248, 245, 0.95) 50%, 
      rgba(248, 245, 240, 0.98) 100%
    );
    border: 2px solid #8A9A7E;
    position: relative;
  }
  
  .featured-card::after {
    content: '‚≠ê Featured';
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: linear-gradient(135deg, #D4AF37, #F4E8D1);
    color: #2E3A59;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.8rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }
  
  .project-header h3 {
    margin: 0 0 1rem 0;
  }
  
  .project-header h3 a {
    color: #2E3A59;
    text-decoration: none;
    font-size: 1.6rem;
    font-weight: 700;
    background: linear-gradient(135deg, #2E3A59, #39647c);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    transition: all 0.3s ease;
  }
  
  .project-header h3 a:hover {
    background: linear-gradient(135deg, #8A9A7E, #D4AF37);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    transform: translateY(-2px);
  }
  
  .project-meta {
    color: #718096;
    font-size: 0.95rem;
    margin-bottom: 1.5rem;
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .project-meta::before {
    content: 'üìÖ';
    font-size: 1rem;
  }
  
  .project-description {
    color: #4A5568;
    line-height: 1.7;
    margin-bottom: 2rem;
    font-size: 1.05rem;
  }
  
  .project-technologies {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
    margin-bottom: 2rem;
  }
  
  .tech-tag {
    background: linear-gradient(135deg, #8A9A7E, #39647c);
    color: white;
    padding: 0.4rem 1rem;
    border-radius: 25px;
    font-size: 0.85rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
  }
  
  .tech-tag:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  }
  
  .project-links {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
  }
  
  .project-link {
    color: white;
    text-decoration: none;
    font-weight: 600;
    padding: 0.8rem 1.5rem;
    background: linear-gradient(135deg, #8A9A7E, #39647c);
    border-radius: 12px;
    transition: all 0.3s ease;
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    position: relative;
    overflow: hidden;
  }
  
  .project-link::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s ease;
  }
  
  .project-link:hover {
    transform: translateY(-3px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
  }
  
  .project-link:hover::before {
    left: 100%;
  }
  
  @media (max-width: 768px) {
    .projects-header h1 {
      font-size: 2.5rem;
    }
    
    .projects-header p {
      font-size: 1.1rem;
    }
    
    .project-card {
      padding: 1.5rem;
    }
    
    .projects-grid {
      grid-template-columns: 1fr;
    }
  }
</style> 