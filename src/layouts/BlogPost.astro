---
import BaseLayout from './BaseLayout.astro';
import TableOfContents from '../components/TableOfContents.astro';
import { formatDate } from '../utils/date';

export interface Props {
  title: string;
  description?: string;
  pubDate: Date;
  updatedDate?: Date;
  author?: string;
  image?: string;
  tags?: string[];
}

const { title, description, pubDate, updatedDate, author = 'Laurence', image, tags = [] } = Astro.props;
---

<BaseLayout title={title} description={description} image={image}>
  <main class="blog-post">
    <article>
      <header class="post-header">
        <h1>{title}</h1>
        <div class="post-meta">
          <time datetime={pubDate.toISOString()}>
            {formatDate(pubDate)}
          </time>
          {author && <span class="author">by {author}</span>}
          {updatedDate && (
            <span class="updated">
              (Updated: <time datetime={updatedDate.toISOString()}>
                {formatDate(updatedDate)}
              </time>)
            </span>
          )}
        </div>
        {tags.length > 0 && (
          <div class="tags">
            {tags.map(tag => (
              <span class="tag">{tag}</span>
            ))}
          </div>
        )}
      </header>
      
      <div class="back-to-blog">
        <a href="/personalWebsite/blog" class="back-button">
          <svg class="back-icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M19 12H5M12 19L5 12L12 5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
          Back to Blog
        </a>
      </div>
      
      <TableOfContents />
      
      <div class="post-content">
        <slot />
      </div>
    </article>
  </main>
</BaseLayout>

<style>
  .blog-post {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem 1rem;
    background-color: #F4E8D1;
  }
  
  /* Adjust layout for TOC on larger screens */
  @media (min-width: 1201px) {
    .blog-post {
      margin-left: 320px;
      margin-right: auto;
    }
  }
  
  /* Mobile responsive for back button */
  @media (max-width: 768px) {
    .back-button {
      padding: 0.65rem 1rem;
      font-size: 0.9rem;
    }
    
    .back-icon {
      width: 16px;
      height: 16px;
    }
  }
  
  .post-header {
    margin-bottom: 2rem;
    border-bottom: 1px solid #eee;
    padding-bottom: 1rem;
  }
  
  .back-to-blog {
    margin-bottom: 2rem;
  }
  
  .back-button {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.25rem;
    background: linear-gradient(135deg, #6366f1 0%, #4f46e5 100%);
    color: white;
    text-decoration: none;
    border-radius: 10px;
    font-weight: 500;
    font-size: 0.95rem;
    letter-spacing: -0.01em;
    transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    box-shadow: 
      0 4px 12px rgba(99, 102, 241, 0.25),
      0 2px 6px rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(8px);
  }
  
  .back-button:hover {
    transform: translateY(-2px) translateX(-2px);
    background: linear-gradient(135deg, #7c3aed 0%, #6366f1 100%);
    box-shadow: 
      0 8px 20px rgba(99, 102, 241, 0.35),
      0 4px 12px rgba(0, 0, 0, 0.15);
    border-color: rgba(255, 255, 255, 0.3);
  }
  
  .back-button:active {
    transform: translateY(-1px) translateX(-1px);
    transition: all 0.1s ease;
  }
  
  .back-icon {
    width: 18px;
    height: 18px;
    flex-shrink: 0;
    transition: transform 0.3s ease;
  }
  
  .back-button:hover .back-icon {
    transform: translateX(-2px);
  }
  
  .post-header h1 {
    font-size: 2.5rem;
    margin-bottom: 0.5rem;
    line-height: 1.2;
  }
  
  .post-meta {
    color: #666;
    font-size: 0.9rem;
    margin-bottom: 1rem;
  }
  
  .post-meta time {
    font-weight: 500;
  }
  
  .author {
    margin-left: 1rem;
  }
  
  .updated {
    margin-left: 1rem;
    font-style: italic;
  }
  
  .tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }
  
  .tag {
    background: #f0f0f0;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-size: 0.8rem;
    color: #333;
  }
  
  .post-content {
    line-height: 1.7;
    color:#F4E8D1
  }
</style> 